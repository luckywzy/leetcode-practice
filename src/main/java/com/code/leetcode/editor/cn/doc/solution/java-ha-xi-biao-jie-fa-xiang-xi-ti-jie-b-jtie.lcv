### 解题思路

1. 什么是稀疏矩阵？
   在矩阵中，若数值为0的元素数目远远多于非0元素的数目，并且非0元素分布没有规律时，则称该矩阵为稀疏矩阵
2. 稀疏矩阵可以用三元组存储 （行标， 列标， 值）
   因为矩阵的乘法是第一个矩阵的行和第二个矩阵的列相乘，所以我们建立两个哈希表分别存储第一个矩阵的值和第二个矩阵的值。
   并且这个哈希表是一个嵌套的格式
   矩阵1的哈希表格式Map<行标, Map<列标，值>>
   矩阵2的哈希表格式Map<列标, Map<行标，值>>

### 代码

* java

```java
class Solution {
    public int[][] multiply(int[][] mat1, int[][] mat2) {
        Map<Integer, Map<Integer, Integer>> map1 = new HashMap<>();
        Map<Integer, Map<Integer, Integer>> map2 = new HashMap<>();
        //构造矩阵1的哈希表        
        //矩阵1的哈希表格式Map<行标, Map<列标，值>>
        for(int i = 0; i < mat1.length; i++){
            map1.put(i, new HashMap<>());
            for(int j = 0; j < mat1[i].length; j++){
                if(mat1[i][j] != 0){
                    map1.get(i).put(j, mat1[i][j]);
                }
            }
        }
        //构造矩阵2的哈希表        
        //矩阵2的哈希表格式Map<列标, Map<行标，值>> 
        for(int i = 0; i < mat2.length; i++){
            for(int j = 0; j < mat2[i].length; j++){
                if(mat2[i][j] != 0){
                    if(!map2.containsKey(j))
                        map2.put(j, new HashMap<>());
                    map2.get(j).put(i, mat2[i][j]);
                }
            }
        }

        int[][] res = new int[mat1.length][mat2[0].length];
        for(int i = 0; i < mat1.length; i++){
            for(int j = 0; j < mat2[0].length; j++){
                Map<Integer, Integer> row = map1.get(i);
                Map<Integer, Integer> col = map2.get(j);
                for(int rowIndex : row.keySet()){
                    if(col != null && col.containsKey(rowIndex))
                        res[i][j] += row.get(rowIndex) * col.get(rowIndex);
                }
            }
        }
        return res;
    }
}
```

