### 解题思路

执行用时：8 ms, 在所有 Java 提交中击败了99.49%的用户
内存消耗：52.7 MB, 在所有 Java 提交中击败了56.56%的用户

### 代码

* java

```java
class Solution {
    public int shortestWordDistance(String[] wordsDict, String word1, String word2) {
        int p1 = -1, p2 = -1, n = wordsDict.length;
        int res = n;
        if(word1.equals(word2)){
            for(int i = 0; i < wordsDict.length; i++){
                if(wordsDict[i].equals(word1)){
                    if(p1 != -1){
                        res = Math.min(i - p1, res);
                    }
                    p1 = i;
                }
            }
        } else {
            for(int i = 0; i < wordsDict.length; i++){
                // System.out.println(p1  + " " + p2);
                if(wordsDict[i].equals(word1)){
                    if(p2 != -1){
                        res = Math.min(i - p2, res);
                    }
                    p1 = i;
                }
                if(wordsDict[i].equals(word2)){
                    if(p1 != -1){
                        res = Math.min(i - p1, res);
                    }
                    p2 = i;
                }
            }
        }
        return res;
    }
}

```

